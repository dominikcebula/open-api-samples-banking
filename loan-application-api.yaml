openapi: 3.0.3
info:
  title: Loan Application and Management API
  version: 1.0.0
  description: API to apply for and manage loans.
servers:
  - url: /api/v1
paths:
  /loans:
    post:
      summary: Apply for a loan
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoanApplicationRequest'
      responses:
        '200':
          description: Loan application submitted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
        '400':
          description: Invalid request body or parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Loan application conflict (e.g., duplicate or ineligible)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    get:
      summary: List all loans for a customer
      parameters:
        - name: customerId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of loans
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Loan'
        '400':
          description: Invalid customer ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /loans/{loanId}:
    get:
      summary: Get loan details
      parameters:
        - name: loanId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Loan details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
        '400':
          description: Invalid loan ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Loan not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    LoanApplicationRequest:
      type: object
      properties:
        customerId:
          type: string
        amount:
          type: number
        termMonths:
          type: integer
        loanType:
          type: string
          enum: [PERSONAL, MORTGAGE, AUTO, STUDENT, BUSINESS, OTHER]
        currency:
          type: string
          pattern: '^[A-Z]{3}$'
          description: ISO 4217 currency code (e.g., USD, EUR)
    Loan:
      type: object
      properties:
        loanId:
          type: string
        customerId:
          type: string
        amount:
          type: number
        termMonths:
          type: integer
        loanType:
          type: string
          enum: [PERSONAL, MORTGAGE, AUTO, STUDENT, BUSINESS, OTHER]
        currency:
          type: string
          pattern: '^[A-Z]{3}$'
          description: ISO 4217 currency code (e.g., USD, EUR)
        status:
          type: string
          enum: [PENDING, APPROVED, REJECTED, ACTIVE, CLOSED, DEFAULTED]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
          description: Error code identifier
        message:
          type: string
          description: Human-readable error message
        details:
          type: string
          description: Additional error details (optional)
