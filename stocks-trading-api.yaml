openapi: 3.0.3
info:
  title: Stock Trading API
  version: 1.0.0
  description: |
    API for trading stocks, including placing buy/sell orders, viewing portfolio, and retrieving stock quotes.
servers:
  - url: /api/v1
paths:
  /stocks:
    get:
      summary: List available stocks
      responses:
        '200':
          description: List of stocks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Stock'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /stocks/{symbol}/quote:
    get:
      summary: Get real-time quote for a stock
      parameters:
        - name: symbol
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Stock quote
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockQuote'
        '404':
          description: Stock not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /portfolio:
    get:
      summary: Get user's stock portfolio
      parameters:
        - name: customerId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Portfolio details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Portfolio'
        '404':
          description: Portfolio not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /orders:
    post:
      summary: Place a buy or sell order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
      responses:
        '201':
          description: Order placed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '400':
          description: Invalid order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Stock not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /orders/{orderId}:
    get:
      summary: Get order status
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Order status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    Stock:
      type: object
      properties:
        symbol:
          type: string
        name:
          type: string
        exchange:
          type: string
    StockQuote:
      type: object
      properties:
        symbol:
          type: string
        price:
          type: number
          format: float
        currency:
          type: string
        timestamp:
          type: string
          format: date-time
    Portfolio:
      type: object
      properties:
        customerId:
          type: string
        holdings:
          type: array
          items:
            $ref: '#/components/schemas/Holding'
    Holding:
      type: object
      properties:
        symbol:
          type: string
        quantity:
          type: number
        averageBuyPrice:
          type: number
          format: float
    OrderRequest:
      type: object
      properties:
        customerId:
          type: string
        symbol:
          type: string
        side:
          type: string
          enum: [ buy, sell ]
        quantity:
          type: number
        orderType:
          type: string
          enum: [ market, limit ]
        limitPrice:
          type: number
          format: float
          nullable: true
    OrderResponse:
      type: object
      properties:
        orderId:
          type: string
        status:
          type: string
          enum: [ pending, filled, partially_filled, cancelled, rejected ]
        filledQuantity:
          type: number
        remainingQuantity:
          type: number
        symbol:
          type: string
        side:
          type: string
        price:
          type: number
          format: float
        timestamp:
          type: string
          format: date-time
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        details:
          type: string
          nullable: true
